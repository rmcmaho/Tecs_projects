// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/1/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {

    IN  in[16], load, address[3];
    OUT out[16];

    PARTS:

    // Direct access logic
    DMux8Way(in=load, sel=address,
    		      a=loadA,
     		      b=loadB,
    		      c=loadC,
    		      d=loadD,
    		      e=loadE,
    		      f=loadF,
    		      g=loadG,
    		      h=loadH);
    Mux8Way16(sel=address, out=out,
		a=outA,
		b=outB,
		c=outC,
		d=outD,
		e=outE,
		f=outF,
		g=outG,
		h=outH);

    // Bank of registers
    Register(in=in, load=loadA, out=outA);
    Register(in=in, load=loadB, out=outB);
    Register(in=in, load=loadC, out=outC);
    Register(in=in, load=loadD, out=outD);
    Register(in=in, load=loadE, out=outE);
    Register(in=in, load=loadF, out=outF);
    Register(in=in, load=loadG, out=outG);
    Register(in=in, load=loadH, out=outH);

}
